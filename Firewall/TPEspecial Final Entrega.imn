node n1 {
    type router
    model PC
    network-config {
	hostname PC1
	!
	interface eth0
	 ip address 192.169.1.2/29
	!
    }
    canvas c1
    iconcoords {658.0 179.0}
    labelcoords {658.0 211.0}
    interface-peer {eth0 n5}
}

node n2 {
    type router
    model PC
    network-config {
	hostname PC2
	!
	interface eth0
	 ip address 192.169.1.3/29
	!
    }
    canvas c1
    iconcoords {698.0 294.0}
    labelcoords {702.0 331.0}
    interface-peer {eth0 n5}
}

node n3 {
    type router
    model PC
    network-config {
	hostname PC3
	!
	interface eth0
	 ip address 192.169.1.4/29
	!
    }
    canvas c1
    iconcoords {661.0 419.0}
    labelcoords {661.0 451.0}
    interface-peer {eth0 n5}
}

node n4 {
    type router
    model router
    network-config {
	hostname Firewall
	!
	interface eth1
	 ip address 192.169.1.17/29
	!
	interface eth2
	 ip address 192.169.1.9/29
	!
	interface eth0
	 ip address 192.169.1.1/29
	!
    }
    canvas c1
    iconcoords {347.0 259.0}
    labelcoords {347.0 291.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    interface-peer {eth2 n8}
    services {IPForward UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('ifconfig eth0 192.169.1.1/29 up', 'ifconfig eth1 192.169.1.17/29 up', 'ifconfig eth2 192.169.1.9/29 up', 'iptables -F', 'iptables -X', 'iptables -P FORWARD DROP', 'iptables -A FORWARD -d 192.169.1.18 -j ACCEPT', 'iptables -A FORWARD -p icmp -d 192.169.1.10 -j ACCEPT', 'iptables -A FORWARD -s 192.169.1.10 -m state --state NEW -j DROP', 'iptables -A FORWARD -s 192.169.1.10 -d 192.169.1.0/29 -m state --state ESTABLISHED -j ACCEPT', 'iptables -A FORWARD -p tcp -s 192.169.1.18 -d 192.169.1.10 -m multiport --dports 22,80,443,25,110 -j ACCEPT', 'iptables -A FORWARD -p tcp -s 192.169.1.0/29 -d 192.169.1.10 --dport 80 -j ACCEPT', 'iptables -t nat -A POSTROUTING -p icmp -d 192.169.1.0/29 -j SNAT --to-source 192.169.1.18', )
	}
    }
}

node n5 {
    type lanswitch
    network-config {
	hostname Switch
	!
    }
    canvas c1
    iconcoords {525.0 298.0}
    labelcoords {525.0 322.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
}

node n6 {
    type router
    model router
    network-config {
	hostname Router
	!
	interface eth0
	 ip address 192.169.1.18/29
	!
    }
    canvas c1
    iconcoords {100.0 253.0}
    labelcoords {100.0 285.0}
    interface-peer {eth0 n4}
    services {IPForward UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('ifconfig eth0 192.169.1.18/29 up', 'ifconfig eth1 201.1.0.1/24 up', 'ip route add 192.169.1.0/29 via 192.169.1.17 dev eth0', 'ip route add 192.169.1.8/29 via 192.169.1.17 dev eth0', 'ip route add default via 192.169.1.17 dev eth0', )
	}
    }
}

node n8 {
    type router
    model host
    network-config {
	hostname DMZ-HOST
	!
	interface eth0
	 ip address 192.169.1.10/29
	!
    }
    canvas c1
    iconcoords {336.0 429.0}
    labelcoords {336.0 461.0}
    interface-peer {eth0 n4}
    services {DefaultRoute SSH UserDefined}
}

link l1 {
    nodes {n5 n1}
    bandwidth 0
}

link l2 {
    nodes {n5 n2}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l4 {
    nodes {n5 n4}
    bandwidth 0
}

link l5 {
    nodes {n6 n4}
    bandwidth 0
}

link l7 {
    nodes {n4 n8}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

